// BEGIN PROGRAM
7 0 32 // jump to line 32 (in this file, line 42) (procedure: main)
7 0 23 // jump to line 23 (in this file, 31) (procedure: a)
7 0 14 // jump to line 14(in this file, line 20) (procedure: b)
7 0 4  // jump to line 4 (in this file, line 8) (procedure: c)

// BEGIN PROCEDURE c
6 0 6  // allocate 2 local variables (y,z)
1 0 1  // push 1 on the stack
4 0 5  // store the value on top of the stack to the same level with offset of 5 (z) 
3 0 4  // load the value at location 4 on the same level (y, level 3)
3 0 5  // load the value at location 5 on the same level (z, level 3)
2 0 2  // add the top two values on the stack (y + z)
3 3 8  // load the value from third level up and offset 8 (w, level 0)
2 0 2  // add the top two values on the stack (y and z + w)
4 2 4  // store this value on two levels up offset 4 (x, level 1)
2 0 0  // return 

// BEGIN PROCEDURE b
6 0 7  // allocate 3 local variables (y,z,v)
3 1 4  // load the value at location 4 one level up (x, level 1)
3 1 6  // load the value at location 6 one level up (u, level 1)
2 0 2  // add those two values (x + u)
3 2 8  // load the value from the 2nd level up 8 offset (w, level 0)
2 0 2  // add these two values (x and u + w)
4 0 4  // store this value in the same level offset 4 (y, level 2) 
5 0 3  // call the procedure at one level up offset 3 (c)
2 0 0  // return

// BEGIN PROCEDURE a
6 0 8  // allocate 4 local variables (x,y,u,v)
1 0 2  // push 2 onto the stack
4 1 6  // store this value one level up at offset 6 (z, level 0) 
3 1 6  // load the value from one level up offset 6 (z, level 0) 
3 1 8  // load the value from one level up offset 8 (w, level 0)
2 0 2  // add the top two values (z + w)
4 0 6  // store this value on the offset of 6 on the same level (u, level 1)
5 0 2  // call the procedure at the same level with offset 2 (b)
2 0 0  // return

// BEGIN PROCEDURE MAIN
6 0 9  // reserve space for 5 local variables (x,y,z,v,w)
1 0 1  // push 1 onto the stack
4 0 4  // store this value on the same level at offset 4 (x, level 0)
1 0 2  // push 2 onto the stack 
4 0 5  // store this value on the same level at offset 5 (y, level 0)
1 0 3  // push 3 onto the stack
4 0 6  // store this value on the same level at offset 6 (z, level 0)
1 0 4  // push 4 onto the stack
4 0 7  // store this value on the same level at offset 7 (v, level 0) 
1 0 5  // push 5 onto the stack
4 0 8  // store this value on the same level at offset 8 (w, level 0)
3 0 7  // load the value stored on the same level at offset 7 (v, level 0)
3 0 8  // load the value stored on the same level at offset 8 (w, level 0)
2 0 2  // add the top two values on the stack (v+w)
4 0 4  // store this value on the same level at offset 4 (x, level 0) 
3 0 6  // load the value stored on the same level at offset 6 (z, level 0) 
9 0 1  // write the value on the top of the stack to the screen
5 0 1  // call procedure a
11 0 3 // halt